plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.assign'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

// sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	cucumberRuntime{
		extendsFrom testImplementation	
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive' 
	
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	
	implementation 'org.springframework.kafka:spring-kafka'
	
	// implementation 'co.elastic.clients:elasticsearch-java:8.11.2' // 최신 버전 확인 후 적용
	// https://mvnrepository.com/artifact/co.elastic.clients/elasticsearch-java
	implementation 'co.elastic.clients:elasticsearch-java:8.17.2'
	
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
	
	implementation 'com.opencsv:opencsv:5.9'
	
	
	implementation  'org.mariadb.jdbc:mariadb-java-client:2.7.3'
	// implementation 'com.nimbusds:nimbus-jose-jwt:9.1.5'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3' // JSON 처리 (Jackson 사용)
    
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta' // QueryDSL JPA 의존성
    
    // QueryDSL Q 클래스를 생성하기 위한 의존성
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    

	
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.mockito:mockito-core:5.11.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.11.0'
    testImplementation 'io.cucumber:cucumber-java:6.6.0'
    testImplementation 'io.cucumber:cucumber-junit:6.6.0'
    testImplementation 'io.cucumber:cucumber-spring:6.6.0'
    testImplementation 'io.cucumber:cucumber-junit-platform-engine:6.6.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

task cucumber(){
	dependsOn assemble, testClasses
	doLast{
		javaexec{
			main = 'io.cucumber.core.cli.Main'
			classpath = configuration.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
			args = ['--plugin', 'pretty',
				'--plugin', 'junit:build/report-results/cucumber.xml',
				'--glue', 'com.song',
				'src/test/resources'
			]
		}
	}
}

tasks.withType(JavaCompile) {
    options.compilerArgs += "-parameters"
}
def querydslSrcDir = 'src/main/generated'

clean {
	delete file('src/main/generated')
}

tasks.withType(JavaCompile) {options.generatedSourceOutputDirectory = file(querydslSrcDir)}
